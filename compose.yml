version: "3.9"

services:

    mp-inkasso:
        container_name: inkasso
        build: ./mp-inkasso
        restart: unless-stopped
        stop_signal: SIGKILL
        environment:
            ENVIRONMENT: production
            PYTHONUNBUFFERED: true
            DEBUG_METRICS: ${INKASSO_DEBUG_METRICS:-false}
        healthcheck:
            test: wget --no-verbose --spider -S -T 1 http://mp-inkasso:1111/health || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
        networks:
            - internal

    mp-postamt:
        container_name: postamt
        build: ./mp-postamt
        stop_signal: SIGKILL
        restart: unless-stopped
        environment:
            ENVIRONMENT: production
            PYTHONUNBUFFERED: true
            DEBUG_METRICS: ${POSTAMT_DEBUG_METRICS:-false}
            SMTP_RELAY_HOST: ${POSTAMT_SMTP_RELAY_HOST}
            SMTP_RELAY_PORT: ${POSTAMT_SMTP_RELAY_PORT}
            SMTP_RELAY_USERNAME: ${POSTAMT_SMTP_RELAY_USERNAME}
            SMTP_RELAY_PASSWORD: ${POSTAMT_SMTP_RELAY_PASSWORD}
        healthcheck:
            test: wget --no-verbose --spider -S -T 1 http://mp-postamt:2222/health || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
        networks:
            - internal

    mp-silo:
        container_name: silo
        image: postgres:alpine
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${SILO_DATABASE_USERNAME}
            POSTGRES_PASSWORD: ${SILO_DATABASE_PASSWORD}
            POSTGRES_DB: ${SILO_DATABASE_NAME}
        healthcheck:
            test: pg_isready -h mp-silo -p 5432 -U ${SILO_DATABASE_USERNAME} -d ${SILO_DATABASE_NAME}
            interval: 30s
            timeout: 10s
            retries: 3
        volumes:
            - silo-data:/var/lib/postgresql/data
        networks:
            - data

    mp-depot:
        container_name: depot
        build: ./mp-depot
        restart: unless-stopped
        stop_signal: SIGKILL
        environment:
            NODE_ENV: production
            PORT: 5555
            DATABASE_HOST: mp-silo
            DATABASE_SSL: false
            DATABASE_URL: ${DEPOT_DATABASE_URL:-}
            DATABASE_PORT: ${SILO_PORT}
            DATABASE_NAME: ${SILO_DATABASE_NAME:-}
            DATABASE_USERNAME: ${SILO_DATABASE_USERNAME:-}
            DATABASE_PASSWORD: ${SILO_DATABASE_PASSWORD:-}
            DATABASE_CLIENT: ${DEPOT_DATABASE_CLIENT}
            STRAPI_TELEMETRY_DISABLED: true
            STRAPI_DISABLE_UPDATE_NOTIFICATION: true
            STRAPI_HIDE_STARTUP_MESSAGE: true
            BROWSER: false
            JWT_SECRET: ${DEPOT_JWT_SECRET}
            API_TOKEN_SALT: ${DEPOT_API_TOKEN_SALT}
            ADMIN_JWT_SECRET: ${DEPOT_ADMIN_JWT_SECRET}
            APP_KEYS: ${DEPOT_APP_KEYS}
            TRANSFER_TOKEN_SALT: ${DEPOT_TRANSFER_TOKEN_SALT}
        healthcheck:
            test: wget --no-verbose --spider -S -T 1 http://mp-depot:5555/_health || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
        volumes:
            - depot-data:/opt/app/public
            - ./mp-depot/database:/opt/app/database
        networks:
            - internal
            - data
        depends_on:
            mp-silo:
                condition: service_healthy

    mp-shop-api:
        container_name: shop-api
        build: ./mp-shop-api
        restart: unless-stopped
        stop_signal: SIGKILL
        environment:
            NODE_ENV: production
            DEPOT_PORT: 5555
            INKASSO_PORT: 1111
            POSTAMT_PORT: 2222
            ADYEN_MERCHANT_ACCOUNT: ${SHOP_API_ADYEN_MERCHANT_ACCOUNT}
            ADYEN_HMAC_KEY: ${SHOP_API_ADYEN_HMAC_KEY}
            ADYEN_CLIENT_KEY: ${SHOP_API_ADYEN_CLIENT_KEY}
            ADYEN_API_KEY: ${SHOP_API_ADYEN_API_KEY}
            ADYEN_ENVIRONMENT: ${SHOP_API_ADYEN_ENVIRONMENT:-TEST}
            DEPOT_TOKEN: ${SHOP_API_DEPOT_TOKEN}
            EXPRESS_TRUST_TOKEN: ${SHOP_API_EXPRESS_TRUST_TOKEN:-}
        healthcheck:
            test: wget --no-verbose --spider -S -T 1 http://mp-shop-api:8888/health || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
        networks:
            - internal
        depends_on:
            mp-depot:
                condition: service_started
            mp-inkasso:
                condition: service_started
            mp-postamt:
                condition: service_started

    mp-shop:
        container_name: shop
        build: ./mp-shop
        restart: unless-stopped
        stop_signal: SIGKILL
        environment:
            VITE_BASE_URL: ${SHOP_BASE_URL:-}
            VITE_PAYMENT_ENVIRONMENT: ${SHOP_API_ADYEN_ENVIRONMENT:-TEST}
        networks:
            - internal
        depends_on:
            mp-shop-api:
                condition: service_healthy

    mp-proxy:
        container_name: proxy
        build: ./mp-proxy
        restart: unless-stopped
        stop_signal: SIGKILL
        environment:
            SHOP_ADDRESS: mp-shop:9999
            SHOP_API_ADDRESS: mp-shop-api:8888
            DEPOT_ADDRESS: mp-depot:5555
            GRAFANA_ADDRESS: grafana:3000
        volumes:
            - cache-data:/cache
            - certs-data:/etc/nginx/certs:ro
        ports:
            - "${PROXY_PORT:-80}:80"
            - "${PROXY_SSL_PORT:-443}:443"
        networks:
            - public
            - internal
        depends_on:
            certs:
                condition: service_completed_successfully
            mp-shop:
                condition: service_started
            mp-shop-api:
                condition: service_started
            mp-depot:
                condition: service_started
            grafana:
                condition: service_started

    certs:
        container_name: certs
        image: certbot/certbot
        command: >-
            certonly --standalone --http-01-port 80 --agree-tos --non-interactive --email "${CERTS_EMAIL}" -d "${CERTS_DOMAIN}"
            --deploy-hook "cp /etc/letsencrypt/live/${CERTS_DOMAIN}/fullchain.pem /etc/letsencrypt/cert.pem && cp /etc/letsencrypt/live/${CERTS_DOMAIN}/privkey.pem /etc/letsencrypt/cert.pem.key"
        volumes:
            - certs-data:/etc/letsencrypt
        ports:
            - "80:80"

    prometheus:
        container_name: prometheus
        image: prom/prometheus
        command: --log.level=error
        restart: unless-stopped
        volumes:
            - ./prometheus/config.yml:/prometheus/prometheus.yml
        networks:
            - internal
        depends_on:
            mp-shop:
                condition: service_started
            mp-shop-api:
                condition: service_healthy
            mp-depot:
                condition: service_healthy
            mp-postamt:
                condition: service_healthy
            mp-inkasso:
                condition: service_healthy

    grafana:
        container_name: grafana
        image: grafana/grafana
        restart: unless-stopped
        environment:
            GF_SERVER_ROUTER_LOGGING: false
            GF_SERVER_SERVE_FROM_SUB_PATH: true
            GF_SERVER_ROOT_URL: https://${PROXY_HOST}:${PROXY_SSL_PORT}/grafana
            GF_DATABASE_LOG_QUERIES: false
            GF_LOG_LEVEL: "error"
            GF_AUTH_ANONYMOUS_ENABLED: ${GRAFANA_AUTH_ANONYMOUS_ENABLED:-false}
        volumes:
            - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/default.yaml
            - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/default.yaml
            - ./grafana/dashboards:/var/lib/grafana/dashboards
        networks:
            - internal
        depends_on:
            - prometheus

volumes:
    silo-data:
    depot-data:
    certs-data:
    cache-data:

networks:
    internal:
    public:
        driver: bridge
    data:
